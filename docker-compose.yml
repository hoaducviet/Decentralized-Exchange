
services:
  # app:
  #   networks:
  #     - DEX
  #   container_name: app
  #   image: node:18
  #   working_dir: /usr/src/frontend
  #   env_file:
  #     - ./frontend/.env
  #   environment:
  #     - NEXT_PUBLIC_BACKEND_API=http://backend:8000
  #     - PORT=3002
  #   volumes:
  #     - ./frontend:/usr/src/frontend
  #   command: bash -c "cd /usr/src/frontend && npm install && npm run dev"
  #   ports:
  #   - 3002:3002

  # nginx_app:
  #   networks:
  #     - DEX
  #   image: nginx:alpine
  #   container_name: nginx_app
  #   ports:
  #     - 80:80
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #   depends_on:
  #     - app

  # frontend_v14:
  #   networks:
  #     - DEX
  #   container_name: dex_frontend_v14
  #   build: 
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   environment:
  #     - NEXT_PUBLIC_BACKEND_API=http://backend:8000

  # nginx_14:
  #   networks:
  #     - DEX
  #   image: nginx:alpine
  #   container_name: nginx_v14
  #   ports:
  #     - 80:80
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #   depends_on:
  #     - frontend_v14
  
  # contract:
  #   networks:
  #     - DEX
  #   container_name: dex_contract
  #   build: 
  #     context: ./contract
  #     dockerfile: Dockerfile
  #   environment:
  #   - PORT=8545
  #   ports:
  #     - 8545:8545


  backend:
    networks:
      - DEX
    container_name: dex_backend
    build: 
      context: ./backend
      dockerfile: Dockerfile
    environment:
    - PORT=8000
    - MONGODBURI=mongodb://mongo-primary:27017,mongo-secondary1:27017,mongo-secondary2:27017/dex?replicaSet=rs0
    - NETWORK_URL=http://contract:8545
    ports:
      - 8000:8000
    depends_on:
      - mongo-primary
      - mongo-secondary1
      - mongo-secondary2
      

    
  mongo-primary:
    networks:
      - DEX
    image: mongo:5.0
    container_name: dex_mongo_primary
    restart: always
    ports:
      - 27019:27017
    environment:
      - MONGO_INITIATE_REPLICASET=rs0
    command: mongod --replSet "rs0" --bind_ip_all
    volumes:
      - mongodb-primary:/data/db
  
  mongo-secondary1:
    networks:
      - DEX
    image: mongo:5.0
    container_name: dex_mongo_secondary1
    restart: always
    ports:
      - 27020:27017
    environment:
      - MONGO_INITIATE_REPLICASET=rs0
    command: mongod --replSet "rs0" --bind_ip_all
    volumes:
      - mongodb-secondary1:/data/db

  mongo-secondary2:
    networks:
      - DEX
    image: mongo:5.0
    container_name: dex_mongo_secondary2
    restart: always
    ports:
      - 27021:27017
    environment:
      - MONGO_INITIATE_REPLICASET=rs0
    command: mongod --replSet "rs0" --bind_ip_all
    volumes:
      - mongodb-secondary2:/data/db
  

networks:
  DEX:
    driver: bridge

volumes:
  mongodb-primary:
  mongodb-secondary1:
  mongodb-secondary2:

